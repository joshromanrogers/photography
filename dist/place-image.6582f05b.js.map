{"version":3,"sources":["js/place-image.js"],"names":["i","placeImage","x","y","nextImage","images","Object","keys","mql","window","matchMedia","img","document","createElement","setAttribute","classList","add","style","maxHeight","matches","left","top","transform","Math","random","console","log","collageBody","querySelector","appendChild","length"],"mappings":";;;;;;;AAAA;;;;AACA,IAAIA,CAAC,GAAG,CAAR;;AAEO,SAASC,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AAChC,MAAMC,SAAS,GAAGC,UAAOC,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAoBL,CAApB,CAAP,CAAlB;;AAEA,MAAIQ,GAAG,GAAGC,MAAM,CAACC,UAAP,CAAkB,oBAAlB,CAAV,CAHgC,CAKhC;AACA;AACA;;AACA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAF,EAAAA,GAAG,CAACG,YAAJ,CAAiB,KAAjB,EAAwBV,SAAxB;AACAO,EAAAA,GAAG,CAACI,SAAJ,CAAcC,GAAd,CAAkB,aAAlB;AACAL,EAAAA,GAAG,CAACM,KAAJ,CAAUC,SAAV,GAAsB,QAAtB;;AACA,MAAIV,GAAG,CAACW,OAAR,EAAiB;AAChBR,IAAAA,GAAG,CAACM,KAAJ,CAAUG,IAAV,GAAiBlB,CAAC,GAAG,CAAJ,GAAQ,GAAzB;AACAS,IAAAA,GAAG,CAACM,KAAJ,CAAUI,GAAV,GAAgBlB,CAAC,GAAG,CAAJ,GAAQ,GAAxB;AACAQ,IAAAA,GAAG,CAACM,KAAJ,CAAUK,SAAV,yCAAqDC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,GAA3E,sBAA0FD,IAAI,CAACC,MAAL,KAAgB,EAAhB,GACzF,EADD;AAEA,GALD,MAMK;AACJb,IAAAA,GAAG,CAACM,KAAJ,CAAUG,IAAV,GAAiBlB,CAAC,GAAG,EAAJ,GAAS,GAA1B;AACAS,IAAAA,GAAG,CAACM,KAAJ,CAAUI,GAAV,GAAgBlB,CAAC,GAAG,EAAJ,GAAS,GAAzB;AACAQ,IAAAA,GAAG,CAACM,KAAJ,CAAUK,SAAV,yCAAqDC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,GAA3E,sBAA0FD,IAAI,CAACC,MAAL,KAAgB,EAAhB,GACzF,EADD;AAEA;;AAGDC,EAAAA,OAAO,CAACC,GAAR,CAAYf,GAAG,CAACM,KAAJ,CAAUG,IAAtB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYf,GAAG,CAACM,KAAJ,CAAUI,GAAtB,EA3BgC,CA6BhC;;AACA,MAAIM,WAAW,GAAGf,QAAQ,CAACgB,aAAT,CAAuB,eAAvB,CAAlB;AACAD,EAAAA,WAAW,CAACE,WAAZ,CAAwBlB,GAAxB;AAEAX,EAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR,CAjCgC,CAmChC;;AACA,MAAIA,CAAC,IAAIM,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAoByB,MAA7B,EAAqC;AACpC9B,IAAAA,CAAC,GAAG,CAAJ;AACA;AACD","file":"place-image.6582f05b.js","sourceRoot":"..","sourcesContent":["import images from \"../imgs/photography/music/*.jpg\";\nlet i = 0;\n\nexport function placeImage(x, y) {\n\tconst nextImage = images[Object.keys(images)[i]];\n\t\n\tlet mql = window.matchMedia(\"(max-width: 640px)\");\n\n\t// create img element,\n\t// set the src as an img in the images array,\n\t// give top left coords based on x and y input values\n\tconst img = document.createElement(\"img\");\n\timg.setAttribute(\"src\", nextImage);\n\timg.classList.add(\"collage-img\");\n\timg.style.maxHeight = \"1800px\";\n\tif (mql.matches) {\n\t\timg.style.left = x / 4 + \"%\";\n\t\timg.style.top = y / 8 + \"%\";\n\t\timg.style.transform = `translate(-50%, -50%) scale(${Math.random() * 1.2 + 0.5}) rotate(${Math.random() * 20 -\n\t\t\t10}deg)`;\n\t}\n\telse {\n\t\timg.style.left = x / 10 + \"%\";\n\t\timg.style.top = y / 10 + \"%\";\n\t\timg.style.transform = `translate(-50%, -50%) scale(${Math.random() * 0.2 + 0.2}) rotate(${Math.random() * 20 -\n\t\t\t10}deg)`;\n\t}\n\t\n\t\n\tconsole.log(img.style.left);\n\tconsole.log(img.style.top);\n\n\t// add to page\n\tlet collageBody = document.querySelector(\".collage-body\");\n\tcollageBody.appendChild(img);\n\n\ti = i + 1;\n\n\t// loop back to first image when the end of images array reached\n\tif (i >= Object.keys(images).length) {\n\t\ti = 0;\n\t}\n}\n\n"]}